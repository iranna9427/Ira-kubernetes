Log file created at: 2025/01/04 06:23:56
Running on machine: ira-minikube
Binary: Built with gc go1.22.5 for linux/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0104 06:23:56.498015   60942 out.go:345] Setting OutFile to fd 1 ...
I0104 06:23:56.498117   60942 out.go:392] TERM=xterm,COLORTERM=, which probably does not support color
I0104 06:23:56.498121   60942 out.go:358] Setting ErrFile to fd 2...
I0104 06:23:56.498124   60942 out.go:392] TERM=xterm,COLORTERM=, which probably does not support color
I0104 06:23:56.498263   60942 root.go:338] Updating PATH: /home/azureuser/.minikube/bin
I0104 06:23:56.498555   60942 out.go:352] Setting JSON to false
I0104 06:23:56.499555   60942 start.go:129] hostinfo: {"hostname":"ira-minikube","uptime":15243,"bootTime":1735956594,"procs":161,"os":"linux","platform":"ubuntu","platformFamily":"debian","platformVersion":"24.04","kernelVersion":"6.8.0-1018-azure","kernelArch":"x86_64","virtualizationSystem":"","virtualizationRole":"","hostId":"fc3cc55e-5378-4d95-840f-ab3d48457099"}
I0104 06:23:56.499600   60942 start.go:139] virtualization:  
I0104 06:23:56.504609   60942 out.go:177] * minikube v1.34.0 on Ubuntu 24.04
I0104 06:23:56.513052   60942 notify.go:220] Checking for updates...
I0104 06:23:56.513427   60942 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.31.0
I0104 06:23:56.513537   60942 driver.go:394] Setting default libvirt URI to qemu:///system
I0104 06:23:56.543569   60942 docker.go:123] docker version: linux-27.4.1:Docker Engine - Community
I0104 06:23:56.543656   60942 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0104 06:23:56.608019   60942 info.go:266] docker info: {ID:0e7023b1-dd37-466c-b1bf-606ecdaa9df7 Containers:2 ContainersRunning:0 ContainersPaused:0 ContainersStopped:2 Images:1 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff false] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:false BridgeNfIP6Tables:false Debug:false NFd:28 OomKillDisable:false NGoroutines:41 SystemTime:2025-01-04 06:23:56.595787204 +0000 UTC LoggingDriver:json-file CgroupDriver:systemd NEventsListener:0 KernelVersion:6.8.0-1018-azure OperatingSystem:Ubuntu 24.04.1 LTS OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:4 MemTotal:16766058496 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy: Name:ira-minikube Labels:[] ExperimentalBuild:false ServerVersion:27.4.1 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:88bf19b2105c8b17560993bee28a01ddc2f97182 Expected:88bf19b2105c8b17560993bee28a01ddc2f97182} RuncCommit:{ID:v1.2.2-0-g7cb3632 Expected:v1.2.2-0-g7cb3632} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=apparmor name=seccomp,profile=builtin name=cgroupns] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/libexec/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.19.3] map[Name:compose Path:/usr/libexec/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.32.1]] Warnings:<nil>}}
I0104 06:23:56.608112   60942 docker.go:318] overlay module found
I0104 06:23:56.612884   60942 out.go:177] * Using the docker driver based on existing profile
I0104 06:23:56.617118   60942 start.go:297] selected driver: docker
I0104 06:23:56.617125   60942 start.go:901] validating driver "docker" against &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 Memory:3900 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.31.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.31.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[dashboard:true default-storageclass:true ingress:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/azureuser:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0104 06:23:56.617195   60942 start.go:912] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0104 06:23:56.617299   60942 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0104 06:23:56.685357   60942 info.go:266] docker info: {ID:0e7023b1-dd37-466c-b1bf-606ecdaa9df7 Containers:2 ContainersRunning:0 ContainersPaused:0 ContainersStopped:2 Images:1 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff false] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:false BridgeNfIP6Tables:false Debug:false NFd:28 OomKillDisable:false NGoroutines:41 SystemTime:2025-01-04 06:23:56.673555892 +0000 UTC LoggingDriver:json-file CgroupDriver:systemd NEventsListener:0 KernelVersion:6.8.0-1018-azure OperatingSystem:Ubuntu 24.04.1 LTS OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:4 MemTotal:16766058496 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy: Name:ira-minikube Labels:[] ExperimentalBuild:false ServerVersion:27.4.1 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:88bf19b2105c8b17560993bee28a01ddc2f97182 Expected:88bf19b2105c8b17560993bee28a01ddc2f97182} RuncCommit:{ID:v1.2.2-0-g7cb3632 Expected:v1.2.2-0-g7cb3632} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=apparmor name=seccomp,profile=builtin name=cgroupns] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/libexec/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.19.3] map[Name:compose Path:/usr/libexec/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.32.1]] Warnings:<nil>}}
I0104 06:23:56.685875   60942 cni.go:84] Creating CNI manager for ""
I0104 06:23:56.685888   60942 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0104 06:23:56.685934   60942 start.go:340] cluster config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 Memory:3900 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.31.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.31.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[dashboard:true default-storageclass:true ingress:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/azureuser:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0104 06:23:56.690133   60942 out.go:177] * Starting "minikube" primary control-plane node in "minikube" cluster
I0104 06:23:56.693338   60942 cache.go:121] Beginning downloading kic base image for docker with docker
I0104 06:23:56.697307   60942 out.go:177] * Pulling base image v0.0.45 ...
I0104 06:23:56.700547   60942 preload.go:131] Checking if preload exists for k8s version v1.31.0 and runtime docker
I0104 06:23:56.700574   60942 preload.go:146] Found local preload: /home/azureuser/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.31.0-docker-overlay2-amd64.tar.lz4
I0104 06:23:56.700579   60942 cache.go:56] Caching tarball of preloaded images
I0104 06:23:56.700633   60942 image.go:79] Checking for gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 in local docker daemon
I0104 06:23:56.700664   60942 preload.go:172] Found /home/azureuser/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.31.0-docker-overlay2-amd64.tar.lz4 in cache, skipping download
I0104 06:23:56.700671   60942 cache.go:59] Finished verifying existence of preloaded tar for v1.31.0 on docker
I0104 06:23:56.700751   60942 profile.go:143] Saving config to /home/azureuser/.minikube/profiles/minikube/config.json ...
W0104 06:23:56.721240   60942 image.go:95] image gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 is of wrong architecture
I0104 06:23:56.721246   60942 cache.go:149] Downloading gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 to local cache
I0104 06:23:56.721319   60942 image.go:63] Checking for gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 in local cache directory
I0104 06:23:56.721330   60942 image.go:66] Found gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 in local cache directory, skipping pull
I0104 06:23:56.721334   60942 image.go:135] gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 exists in cache, skipping pull
I0104 06:23:56.721340   60942 cache.go:152] successfully saved gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 as a tarball
I0104 06:23:56.721344   60942 cache.go:162] Loading gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 from local cache
I0104 06:23:56.866195   60942 cache.go:164] successfully loaded and using gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 from cached tarball
I0104 06:23:56.866228   60942 cache.go:194] Successfully downloaded all kic artifacts
I0104 06:23:56.866261   60942 start.go:360] acquireMachinesLock for minikube: {Name:mkdcff04a72254afe96192e51aa6ae202882bdaf Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0104 06:23:56.866348   60942 start.go:364] duration metric: took 50µs to acquireMachinesLock for "minikube"
I0104 06:23:56.866364   60942 start.go:96] Skipping create...Using existing machine configuration
I0104 06:23:56.866377   60942 fix.go:54] fixHost starting: 
I0104 06:23:56.866627   60942 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0104 06:23:56.886854   60942 fix.go:112] recreateIfNeeded on minikube: state=Stopped err=<nil>
W0104 06:23:56.886874   60942 fix.go:138] unexpected machine state, will restart: <nil>
I0104 06:23:56.891695   60942 out.go:177] * Restarting existing docker container for "minikube" ...
I0104 06:23:56.897891   60942 cli_runner.go:164] Run: docker start minikube
I0104 06:23:57.300752   60942 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0104 06:23:57.322717   60942 kic.go:430] container "minikube" state is running.
I0104 06:23:57.323146   60942 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0104 06:23:57.345819   60942 profile.go:143] Saving config to /home/azureuser/.minikube/profiles/minikube/config.json ...
I0104 06:23:57.346027   60942 machine.go:93] provisionDockerMachine start ...
I0104 06:23:57.346117   60942 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0104 06:23:57.381671   60942 main.go:141] libmachine: Using SSH client type: native
I0104 06:23:57.381904   60942 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82f9c0] 0x832720 <nil>  [] 0s} 127.0.0.1 32773 <nil> <nil>}
I0104 06:23:57.381912   60942 main.go:141] libmachine: About to run SSH command:
hostname
I0104 06:23:57.382939   60942 main.go:141] libmachine: Error dialing TCP: ssh: handshake failed: read tcp 127.0.0.1:39862->127.0.0.1:32773: read: connection reset by peer
I0104 06:24:00.519841   60942 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0104 06:24:00.519858   60942 ubuntu.go:169] provisioning hostname "minikube"
I0104 06:24:00.519914   60942 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0104 06:24:00.544843   60942 main.go:141] libmachine: Using SSH client type: native
I0104 06:24:00.545062   60942 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82f9c0] 0x832720 <nil>  [] 0s} 127.0.0.1 32773 <nil> <nil>}
I0104 06:24:00.545071   60942 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0104 06:24:00.697099   60942 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0104 06:24:00.697179   60942 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0104 06:24:00.716853   60942 main.go:141] libmachine: Using SSH client type: native
I0104 06:24:00.717059   60942 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82f9c0] 0x832720 <nil>  [] 0s} 127.0.0.1 32773 <nil> <nil>}
I0104 06:24:00.717072   60942 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0104 06:24:00.853460   60942 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0104 06:24:00.853478   60942 ubuntu.go:175] set auth options {CertDir:/home/azureuser/.minikube CaCertPath:/home/azureuser/.minikube/certs/ca.pem CaPrivateKeyPath:/home/azureuser/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/home/azureuser/.minikube/machines/server.pem ServerKeyPath:/home/azureuser/.minikube/machines/server-key.pem ClientKeyPath:/home/azureuser/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/home/azureuser/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/home/azureuser/.minikube}
I0104 06:24:00.853599   60942 ubuntu.go:177] setting up certificates
I0104 06:24:00.853611   60942 provision.go:84] configureAuth start
I0104 06:24:00.853692   60942 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0104 06:24:00.874459   60942 provision.go:143] copyHostCerts
I0104 06:24:00.874523   60942 exec_runner.go:144] found /home/azureuser/.minikube/ca.pem, removing ...
I0104 06:24:00.874530   60942 exec_runner.go:203] rm: /home/azureuser/.minikube/ca.pem
I0104 06:24:00.874614   60942 exec_runner.go:151] cp: /home/azureuser/.minikube/certs/ca.pem --> /home/azureuser/.minikube/ca.pem (1086 bytes)
I0104 06:24:00.874811   60942 exec_runner.go:144] found /home/azureuser/.minikube/cert.pem, removing ...
I0104 06:24:00.874815   60942 exec_runner.go:203] rm: /home/azureuser/.minikube/cert.pem
I0104 06:24:00.874850   60942 exec_runner.go:151] cp: /home/azureuser/.minikube/certs/cert.pem --> /home/azureuser/.minikube/cert.pem (1131 bytes)
I0104 06:24:00.874923   60942 exec_runner.go:144] found /home/azureuser/.minikube/key.pem, removing ...
I0104 06:24:00.874927   60942 exec_runner.go:203] rm: /home/azureuser/.minikube/key.pem
I0104 06:24:00.874957   60942 exec_runner.go:151] cp: /home/azureuser/.minikube/certs/key.pem --> /home/azureuser/.minikube/key.pem (1675 bytes)
I0104 06:24:00.875021   60942 provision.go:117] generating server cert: /home/azureuser/.minikube/machines/server.pem ca-key=/home/azureuser/.minikube/certs/ca.pem private-key=/home/azureuser/.minikube/certs/ca-key.pem org=azureuser.minikube san=[127.0.0.1 192.168.49.2 localhost minikube]
I0104 06:24:01.183518   60942 provision.go:177] copyRemoteCerts
I0104 06:24:01.183573   60942 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0104 06:24:01.183612   60942 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0104 06:24:01.206273   60942 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32773 SSHKeyPath:/home/azureuser/.minikube/machines/minikube/id_rsa Username:docker}
I0104 06:24:01.304838   60942 ssh_runner.go:362] scp /home/azureuser/.minikube/certs/ca.pem --> /etc/docker/ca.pem (1086 bytes)
I0104 06:24:01.337337   60942 ssh_runner.go:362] scp /home/azureuser/.minikube/machines/server.pem --> /etc/docker/server.pem (1188 bytes)
I0104 06:24:01.375856   60942 ssh_runner.go:362] scp /home/azureuser/.minikube/machines/server-key.pem --> /etc/docker/server-key.pem (1679 bytes)
I0104 06:24:01.406708   60942 provision.go:87] duration metric: took 553.08546ms to configureAuth
I0104 06:24:01.406722   60942 ubuntu.go:193] setting minikube options for container-runtime
I0104 06:24:01.406921   60942 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.31.0
I0104 06:24:01.406968   60942 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0104 06:24:01.426814   60942 main.go:141] libmachine: Using SSH client type: native
I0104 06:24:01.427051   60942 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82f9c0] 0x832720 <nil>  [] 0s} 127.0.0.1 32773 <nil> <nil>}
I0104 06:24:01.427058   60942 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0104 06:24:01.560749   60942 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I0104 06:24:01.560786   60942 ubuntu.go:71] root file system type: overlay
I0104 06:24:01.560889   60942 provision.go:314] Updating docker unit: /lib/systemd/system/docker.service ...
I0104 06:24:01.560949   60942 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0104 06:24:01.582389   60942 main.go:141] libmachine: Using SSH client type: native
I0104 06:24:01.582615   60942 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82f9c0] 0x832720 <nil>  [] 0s} 127.0.0.1 32773 <nil> <nil>}
I0104 06:24:01.582683   60942 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %s "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0104 06:24:01.732171   60942 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0104 06:24:01.732286   60942 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0104 06:24:01.752392   60942 main.go:141] libmachine: Using SSH client type: native
I0104 06:24:01.752595   60942 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x82f9c0] 0x832720 <nil>  [] 0s} 127.0.0.1 32773 <nil> <nil>}
I0104 06:24:01.752609   60942 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0104 06:24:01.892578   60942 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0104 06:24:01.892592   60942 machine.go:96] duration metric: took 4.546557267s to provisionDockerMachine
I0104 06:24:01.892602   60942 start.go:293] postStartSetup for "minikube" (driver="docker")
I0104 06:24:01.892612   60942 start.go:322] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0104 06:24:01.892665   60942 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0104 06:24:01.892709   60942 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0104 06:24:01.914073   60942 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32773 SSHKeyPath:/home/azureuser/.minikube/machines/minikube/id_rsa Username:docker}
I0104 06:24:02.012061   60942 ssh_runner.go:195] Run: cat /etc/os-release
I0104 06:24:02.016799   60942 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0104 06:24:02.016912   60942 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0104 06:24:02.016926   60942 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0104 06:24:02.016932   60942 info.go:137] Remote host: Ubuntu 22.04.4 LTS
I0104 06:24:02.016942   60942 filesync.go:126] Scanning /home/azureuser/.minikube/addons for local assets ...
I0104 06:24:02.017001   60942 filesync.go:126] Scanning /home/azureuser/.minikube/files for local assets ...
I0104 06:24:02.017025   60942 start.go:296] duration metric: took 124.417396ms for postStartSetup
I0104 06:24:02.017066   60942 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0104 06:24:02.017100   60942 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0104 06:24:02.038299   60942 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32773 SSHKeyPath:/home/azureuser/.minikube/machines/minikube/id_rsa Username:docker}
I0104 06:24:02.133285   60942 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0104 06:24:02.139247   60942 fix.go:56] duration metric: took 5.272874027s for fixHost
I0104 06:24:02.139259   60942 start.go:83] releasing machines lock for "minikube", held for 5.272903127s
I0104 06:24:02.139341   60942 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0104 06:24:02.158615   60942 ssh_runner.go:195] Run: cat /version.json
I0104 06:24:02.158670   60942 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0104 06:24:02.158701   60942 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I0104 06:24:02.158762   60942 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0104 06:24:02.179632   60942 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32773 SSHKeyPath:/home/azureuser/.minikube/machines/minikube/id_rsa Username:docker}
I0104 06:24:02.179632   60942 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32773 SSHKeyPath:/home/azureuser/.minikube/machines/minikube/id_rsa Username:docker}
I0104 06:24:02.419885   60942 ssh_runner.go:195] Run: systemctl --version
I0104 06:24:02.426477   60942 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I0104 06:24:02.432604   60942 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
I0104 06:24:02.456568   60942 cni.go:230] loopback cni configuration patched: "/etc/cni/net.d/*loopback.conf*" found
I0104 06:24:02.456616   60942 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%p, " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I0104 06:24:02.466985   60942 cni.go:259] no active bridge cni configs found in "/etc/cni/net.d" - nothing to disable
I0104 06:24:02.466997   60942 start.go:495] detecting cgroup driver to use...
I0104 06:24:02.467022   60942 detect.go:190] detected "systemd" cgroup driver on host os
I0104 06:24:02.467113   60942 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %s "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I0104 06:24:02.487316   60942 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.10"|' /etc/containerd/config.toml"
I0104 06:24:02.500344   60942 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I0104 06:24:02.512942   60942 containerd.go:146] configuring containerd to use "systemd" as cgroup driver...
I0104 06:24:02.512996   60942 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = true|g' /etc/containerd/config.toml"
I0104 06:24:02.526799   60942 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0104 06:24:02.539964   60942 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I0104 06:24:02.552648   60942 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0104 06:24:02.564857   60942 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I0104 06:24:02.575818   60942 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I0104 06:24:02.587924   60942 ssh_runner.go:195] Run: sh -c "sudo sed -i '/^ *enable_unprivileged_ports = .*/d' /etc/containerd/config.toml"
I0104 06:24:02.599758   60942 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)\[plugins."io.containerd.grpc.v1.cri"\]|&\n\1  enable_unprivileged_ports = true|' /etc/containerd/config.toml"
I0104 06:24:02.611616   60942 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I0104 06:24:02.621556   60942 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I0104 06:24:02.631716   60942 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0104 06:24:02.720816   60942 ssh_runner.go:195] Run: sudo systemctl restart containerd
I0104 06:24:02.821653   60942 start.go:495] detecting cgroup driver to use...
I0104 06:24:02.821690   60942 detect.go:190] detected "systemd" cgroup driver on host os
I0104 06:24:02.821732   60942 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0104 06:24:02.840706   60942 cruntime.go:279] skipping containerd shutdown because we are bound to it
I0104 06:24:02.840771   60942 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0104 06:24:02.855975   60942 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %s "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0104 06:24:02.883456   60942 ssh_runner.go:195] Run: which cri-dockerd
I0104 06:24:02.887760   60942 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I0104 06:24:02.900616   60942 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (190 bytes)
I0104 06:24:02.924116   60942 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0104 06:24:03.030881   60942 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0104 06:24:03.133067   60942 docker.go:574] configuring docker to use "systemd" as cgroup driver...
I0104 06:24:03.133205   60942 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (129 bytes)
I0104 06:24:03.155619   60942 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0104 06:24:03.246150   60942 ssh_runner.go:195] Run: sudo systemctl restart docker
I0104 06:24:04.488865   60942 ssh_runner.go:235] Completed: sudo systemctl restart docker: (1.242671655s)
I0104 06:24:04.488920   60942 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.socket
I0104 06:24:04.504753   60942 ssh_runner.go:195] Run: sudo systemctl stop cri-docker.socket
I0104 06:24:04.520617   60942 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I0104 06:24:04.538296   60942 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I0104 06:24:04.626151   60942 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0104 06:24:04.715533   60942 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0104 06:24:04.807433   60942 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I0104 06:24:04.841333   60942 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I0104 06:24:04.856672   60942 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0104 06:24:04.944394   60942 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.service
I0104 06:24:05.046319   60942 start.go:542] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0104 06:24:05.046396   60942 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0104 06:24:05.052194   60942 start.go:563] Will wait 60s for crictl version
I0104 06:24:05.052232   60942 ssh_runner.go:195] Run: which crictl
I0104 06:24:05.057354   60942 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I0104 06:24:05.112903   60942 start.go:579] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  27.2.0
RuntimeApiVersion:  v1
I0104 06:24:05.112964   60942 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0104 06:24:05.145805   60942 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0104 06:24:05.180174   60942 out.go:235] * Preparing Kubernetes v1.31.0 on Docker 27.2.0 ...
I0104 06:24:05.180266   60942 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0104 06:24:05.201444   60942 ssh_runner.go:195] Run: grep 192.168.49.1	host.minikube.internal$ /etc/hosts
I0104 06:24:05.206586   60942 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.49.1	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0104 06:24:05.220870   60942 kubeadm.go:883] updating cluster {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 Memory:3900 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.31.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.31.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[dashboard:true default-storageclass:true ingress:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/azureuser:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} ...
I0104 06:24:05.221038   60942 preload.go:131] Checking if preload exists for k8s version v1.31.0 and runtime docker
I0104 06:24:05.221112   60942 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0104 06:24:05.247560   60942 docker.go:685] Got preloaded images: -- stdout --
nginx:<none>
nginx:latest
iranna730/projectdemo:latest
registry.k8s.io/ingress-nginx/controller:<none>
registry.k8s.io/ingress-nginx/kube-webhook-certgen:<none>
registry.k8s.io/kube-scheduler:v1.31.0
registry.k8s.io/kube-apiserver:v1.31.0
registry.k8s.io/kube-controller-manager:v1.31.0
registry.k8s.io/kube-proxy:v1.31.0
registry.k8s.io/etcd:3.5.15-0
httpd:<none>
httpd:latest
registry.k8s.io/pause:3.10
registry.k8s.io/coredns/coredns:v1.11.1
kubernetesui/dashboard:<none>
kubernetesui/metrics-scraper:<none>
nginx:1.21
nginx:1.20
gcr.io/k8s-minikube/storage-provisioner:v5
nginx:1.14.2

-- /stdout --
I0104 06:24:05.247572   60942 docker.go:615] Images already preloaded, skipping extraction
I0104 06:24:05.247672   60942 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0104 06:24:05.275557   60942 docker.go:685] Got preloaded images: -- stdout --
nginx:<none>
nginx:latest
iranna730/projectdemo:latest
registry.k8s.io/ingress-nginx/controller:<none>
registry.k8s.io/ingress-nginx/kube-webhook-certgen:<none>
registry.k8s.io/kube-apiserver:v1.31.0
registry.k8s.io/kube-scheduler:v1.31.0
registry.k8s.io/kube-controller-manager:v1.31.0
registry.k8s.io/kube-proxy:v1.31.0
registry.k8s.io/etcd:3.5.15-0
httpd:latest
httpd:<none>
registry.k8s.io/pause:3.10
registry.k8s.io/coredns/coredns:v1.11.1
kubernetesui/dashboard:<none>
kubernetesui/metrics-scraper:<none>
nginx:1.21
nginx:1.20
gcr.io/k8s-minikube/storage-provisioner:v5
nginx:1.14.2

-- /stdout --
I0104 06:24:05.275570   60942 cache_images.go:84] Images are preloaded, skipping loading
I0104 06:24:05.275579   60942 kubeadm.go:934] updating node { 192.168.49.2 8443 v1.31.0 docker true true} ...
I0104 06:24:05.275694   60942 kubeadm.go:946] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.31.0/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.31.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:}
I0104 06:24:05.275747   60942 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0104 06:24:05.340843   60942 cni.go:84] Creating CNI manager for ""
I0104 06:24:05.340860   60942 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0104 06:24:05.340881   60942 kubeadm.go:84] Using pod CIDR: 10.244.0.0/16
I0104 06:24:05.340904   60942 kubeadm.go:181] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.31.0 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.49.2 CgroupDriver:systemd ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[containerRuntimeEndpoint:unix:///var/run/cri-dockerd.sock hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I0104 06:24:05.341055   60942 kubeadm.go:187] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    node-ip: 192.168.49.2
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.31.0
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: systemd
containerRuntimeEndpoint: unix:///var/run/cri-dockerd.sock
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%"
  nodefs.inodesFree: "0%"
  imagefs.available: "0%"
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0104 06:24:05.341126   60942 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.31.0
I0104 06:24:05.353833   60942 binaries.go:44] Found k8s binaries, skipping transfer
I0104 06:24:05.353871   60942 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0104 06:24:05.367322   60942 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (307 bytes)
I0104 06:24:05.391222   60942 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0104 06:24:05.414063   60942 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2149 bytes)
I0104 06:24:05.439423   60942 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I0104 06:24:05.444006   60942 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.49.2	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0104 06:24:05.458333   60942 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0104 06:24:05.549992   60942 ssh_runner.go:195] Run: sudo systemctl start kubelet
I0104 06:24:05.577204   60942 certs.go:68] Setting up /home/azureuser/.minikube/profiles/minikube for IP: 192.168.49.2
I0104 06:24:05.577212   60942 certs.go:194] generating shared ca certs ...
I0104 06:24:05.577226   60942 certs.go:226] acquiring lock for ca certs: {Name:mkabb2e586c5f4bf27122f0fb279a375a50390e0 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0104 06:24:05.577440   60942 certs.go:235] skipping valid "minikubeCA" ca cert: /home/azureuser/.minikube/ca.key
I0104 06:24:05.577530   60942 certs.go:235] skipping valid "proxyClientCA" ca cert: /home/azureuser/.minikube/proxy-client-ca.key
I0104 06:24:05.577539   60942 certs.go:256] generating profile certs ...
I0104 06:24:05.577633   60942 certs.go:359] skipping valid signed profile cert regeneration for "minikube-user": /home/azureuser/.minikube/profiles/minikube/client.key
I0104 06:24:05.577684   60942 certs.go:359] skipping valid signed profile cert regeneration for "minikube": /home/azureuser/.minikube/profiles/minikube/apiserver.key.7fb57e3c
I0104 06:24:05.577724   60942 certs.go:359] skipping valid signed profile cert regeneration for "aggregator": /home/azureuser/.minikube/profiles/minikube/proxy-client.key
I0104 06:24:05.577947   60942 certs.go:484] found cert: /home/azureuser/.minikube/certs/ca-key.pem (1675 bytes)
I0104 06:24:05.577980   60942 certs.go:484] found cert: /home/azureuser/.minikube/certs/ca.pem (1086 bytes)
I0104 06:24:05.578005   60942 certs.go:484] found cert: /home/azureuser/.minikube/certs/cert.pem (1131 bytes)
I0104 06:24:05.578035   60942 certs.go:484] found cert: /home/azureuser/.minikube/certs/key.pem (1675 bytes)
I0104 06:24:05.578810   60942 ssh_runner.go:362] scp /home/azureuser/.minikube/ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0104 06:24:05.613332   60942 ssh_runner.go:362] scp /home/azureuser/.minikube/ca.key --> /var/lib/minikube/certs/ca.key (1675 bytes)
I0104 06:24:05.644860   60942 ssh_runner.go:362] scp /home/azureuser/.minikube/proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0104 06:24:05.683707   60942 ssh_runner.go:362] scp /home/azureuser/.minikube/proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1679 bytes)
I0104 06:24:05.724782   60942 ssh_runner.go:362] scp /home/azureuser/.minikube/profiles/minikube/apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1411 bytes)
I0104 06:24:05.762704   60942 ssh_runner.go:362] scp /home/azureuser/.minikube/profiles/minikube/apiserver.key --> /var/lib/minikube/certs/apiserver.key (1679 bytes)
I0104 06:24:05.796386   60942 ssh_runner.go:362] scp /home/azureuser/.minikube/profiles/minikube/proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0104 06:24:05.832735   60942 ssh_runner.go:362] scp /home/azureuser/.minikube/profiles/minikube/proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1675 bytes)
I0104 06:24:05.870419   60942 ssh_runner.go:362] scp /home/azureuser/.minikube/ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0104 06:24:05.906698   60942 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I0104 06:24:05.935971   60942 ssh_runner.go:195] Run: openssl version
I0104 06:24:05.944037   60942 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0104 06:24:05.961476   60942 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0104 06:24:05.966273   60942 certs.go:528] hashing: -rw-r--r-- 1 root root 1111 Dec 23 07:14 /usr/share/ca-certificates/minikubeCA.pem
I0104 06:24:05.966324   60942 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0104 06:24:05.974972   60942 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0104 06:24:05.987453   60942 ssh_runner.go:195] Run: stat /var/lib/minikube/certs/apiserver-kubelet-client.crt
I0104 06:24:05.991954   60942 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/apiserver-etcd-client.crt -checkend 86400
I0104 06:24:06.000313   60942 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/apiserver-kubelet-client.crt -checkend 86400
I0104 06:24:06.008338   60942 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/server.crt -checkend 86400
I0104 06:24:06.018427   60942 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/healthcheck-client.crt -checkend 86400
I0104 06:24:06.027884   60942 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/peer.crt -checkend 86400
I0104 06:24:06.039007   60942 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/front-proxy-client.crt -checkend 86400
I0104 06:24:06.046975   60942 kubeadm.go:392] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.45@sha256:81df288595202a317b1a4dc2506ca2e4ed5f22373c19a441b88cfbf4b9867c85 Memory:3900 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.31.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.31.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[dashboard:true default-storageclass:true ingress:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/azureuser:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0104 06:24:06.047075   60942 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0104 06:24:06.071660   60942 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0104 06:24:06.084307   60942 kubeadm.go:408] found existing configuration files, will attempt cluster restart
I0104 06:24:06.084332   60942 kubeadm.go:593] restartPrimaryControlPlane start ...
I0104 06:24:06.084401   60942 ssh_runner.go:195] Run: sudo test -d /data/minikube
I0104 06:24:06.095425   60942 kubeadm.go:130] /data/minikube skipping compat symlinks: sudo test -d /data/minikube: Process exited with status 1
stdout:

stderr:
I0104 06:24:06.096005   60942 kubeconfig.go:47] verify endpoint returned: get endpoint: "minikube" does not appear in /home/azureuser/.kube/config
I0104 06:24:06.096369   60942 kubeconfig.go:62] /home/azureuser/.kube/config needs updating (will repair): [kubeconfig missing "minikube" cluster setting kubeconfig missing "minikube" context setting]
I0104 06:24:06.096837   60942 lock.go:35] WriteFile acquiring /home/azureuser/.kube/config: {Name:mkf9f00f9d22bdb81db643f37edd298a03aef542 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0104 06:24:06.098171   60942 ssh_runner.go:195] Run: sudo diff -u /var/tmp/minikube/kubeadm.yaml /var/tmp/minikube/kubeadm.yaml.new
I0104 06:24:06.109884   60942 kubeadm.go:630] The running cluster does not require reconfiguration: 192.168.49.2
I0104 06:24:06.109901   60942 kubeadm.go:597] duration metric: took 25.564716ms to restartPrimaryControlPlane
I0104 06:24:06.109907   60942 kubeadm.go:394] duration metric: took 62.939684ms to StartCluster
I0104 06:24:06.109921   60942 settings.go:142] acquiring lock: {Name:mke1dd17d08447178171701700c8284a7168ff9a Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0104 06:24:06.109971   60942 settings.go:150] Updating kubeconfig:  /home/azureuser/.kube/config
I0104 06:24:06.110715   60942 lock.go:35] WriteFile acquiring /home/azureuser/.kube/config: {Name:mkf9f00f9d22bdb81db643f37edd298a03aef542 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0104 06:24:06.110909   60942 start.go:235] Will wait 6m0s for node &{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.31.0 ContainerRuntime:docker ControlPlane:true Worker:true}
I0104 06:24:06.111154   60942 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.31.0
I0104 06:24:06.111184   60942 addons.go:507] enable addons start: toEnable=map[ambassador:false auto-pause:false cloud-spanner:false csi-hostpath-driver:false dashboard:true default-storageclass:true efk:false freshpod:false gcp-auth:false gvisor:false headlamp:false helm-tiller:false inaccel:false ingress:true ingress-dns:false inspektor-gadget:false istio:false istio-provisioner:false kong:false kubeflow:false kubevirt:false logviewer:false metallb:false metrics-server:false nvidia-device-plugin:false nvidia-driver-installer:false nvidia-gpu-device-plugin:false olm:false pod-security-policy:false portainer:false registry:false registry-aliases:false registry-creds:false storage-provisioner:true storage-provisioner-gluster:false storage-provisioner-rancher:false volcano:false volumesnapshots:false yakd:false]
I0104 06:24:06.111250   60942 addons.go:69] Setting storage-provisioner=true in profile "minikube"
I0104 06:24:06.111284   60942 addons.go:234] Setting addon storage-provisioner=true in "minikube"
W0104 06:24:06.111288   60942 addons.go:243] addon storage-provisioner should already be in state true
I0104 06:24:06.111308   60942 host.go:66] Checking if "minikube" exists ...
I0104 06:24:06.111432   60942 addons.go:69] Setting default-storageclass=true in profile "minikube"
I0104 06:24:06.111450   60942 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on "minikube"
I0104 06:24:06.111449   60942 addons.go:69] Setting dashboard=true in profile "minikube"
I0104 06:24:06.111486   60942 addons.go:234] Setting addon dashboard=true in "minikube"
W0104 06:24:06.111492   60942 addons.go:243] addon dashboard should already be in state true
I0104 06:24:06.111568   60942 host.go:66] Checking if "minikube" exists ...
I0104 06:24:06.111704   60942 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0104 06:24:06.111779   60942 addons.go:69] Setting ingress=true in profile "minikube"
I0104 06:24:06.111803   60942 addons.go:234] Setting addon ingress=true in "minikube"
W0104 06:24:06.111808   60942 addons.go:243] addon ingress should already be in state true
I0104 06:24:06.111833   60942 host.go:66] Checking if "minikube" exists ...
I0104 06:24:06.111950   60942 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0104 06:24:06.112034   60942 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0104 06:24:06.112147   60942 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0104 06:24:06.120314   60942 out.go:177] * Verifying Kubernetes components...
I0104 06:24:06.127000   60942 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0104 06:24:06.144106   60942 addons.go:234] Setting addon default-storageclass=true in "minikube"
W0104 06:24:06.144116   60942 addons.go:243] addon default-storageclass should already be in state true
I0104 06:24:06.144142   60942 host.go:66] Checking if "minikube" exists ...
I0104 06:24:06.144683   60942 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0104 06:24:06.153772   60942 out.go:177]   - Using image docker.io/kubernetesui/dashboard:v2.7.0
I0104 06:24:06.160151   60942 out.go:177]   - Using image docker.io/kubernetesui/metrics-scraper:v1.0.8
I0104 06:24:06.165407   60942 out.go:177]   - Using image registry.k8s.io/ingress-nginx/controller:v1.11.2
I0104 06:24:06.166572   60942 addons.go:431] installing /etc/kubernetes/addons/dashboard-ns.yaml
I0104 06:24:06.166600   60942 ssh_runner.go:362] scp dashboard/dashboard-ns.yaml --> /etc/kubernetes/addons/dashboard-ns.yaml (759 bytes)
I0104 06:24:06.166663   60942 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0104 06:24:06.178544   60942 out.go:177]   - Using image registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.4.3
I0104 06:24:06.181445   60942 out.go:177]   - Using image gcr.io/k8s-minikube/storage-provisioner:v5
I0104 06:24:06.190974   60942 addons.go:431] installing /etc/kubernetes/addons/storage-provisioner.yaml
I0104 06:24:06.190984   60942 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)
I0104 06:24:06.191038   60942 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0104 06:24:06.191363   60942 out.go:177]   - Using image registry.k8s.io/ingress-nginx/kube-webhook-certgen:v1.4.3
I0104 06:24:06.198322   60942 addons.go:431] installing /etc/kubernetes/addons/storageclass.yaml
I0104 06:24:06.198330   60942 ssh_runner.go:362] scp storageclass/storageclass.yaml --> /etc/kubernetes/addons/storageclass.yaml (271 bytes)
I0104 06:24:06.198388   60942 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0104 06:24:06.202049   60942 addons.go:431] installing /etc/kubernetes/addons/ingress-deploy.yaml
I0104 06:24:06.202057   60942 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/ingress-deploy.yaml (16078 bytes)
I0104 06:24:06.202098   60942 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0104 06:24:06.231736   60942 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32773 SSHKeyPath:/home/azureuser/.minikube/machines/minikube/id_rsa Username:docker}
I0104 06:24:06.240882   60942 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32773 SSHKeyPath:/home/azureuser/.minikube/machines/minikube/id_rsa Username:docker}
I0104 06:24:06.248493   60942 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32773 SSHKeyPath:/home/azureuser/.minikube/machines/minikube/id_rsa Username:docker}
I0104 06:24:06.263510   60942 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32773 SSHKeyPath:/home/azureuser/.minikube/machines/minikube/id_rsa Username:docker}
I0104 06:24:06.323320   60942 ssh_runner.go:195] Run: sudo systemctl start kubelet
I0104 06:24:06.347147   60942 api_server.go:52] waiting for apiserver process to appear ...
I0104 06:24:06.347211   60942 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0104 06:24:06.358695   60942 addons.go:431] installing /etc/kubernetes/addons/dashboard-clusterrole.yaml
I0104 06:24:06.358704   60942 ssh_runner.go:362] scp dashboard/dashboard-clusterrole.yaml --> /etc/kubernetes/addons/dashboard-clusterrole.yaml (1001 bytes)
I0104 06:24:06.389414   60942 addons.go:431] installing /etc/kubernetes/addons/dashboard-clusterrolebinding.yaml
I0104 06:24:06.389427   60942 ssh_runner.go:362] scp dashboard/dashboard-clusterrolebinding.yaml --> /etc/kubernetes/addons/dashboard-clusterrolebinding.yaml (1018 bytes)
I0104 06:24:06.398674   60942 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply -f /etc/kubernetes/addons/ingress-deploy.yaml
I0104 06:24:06.415607   60942 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml
I0104 06:24:06.419556   60942 addons.go:431] installing /etc/kubernetes/addons/dashboard-configmap.yaml
I0104 06:24:06.419565   60942 ssh_runner.go:362] scp dashboard/dashboard-configmap.yaml --> /etc/kubernetes/addons/dashboard-configmap.yaml (837 bytes)
I0104 06:24:06.421061   60942 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml
I0104 06:24:06.474575   60942 addons.go:431] installing /etc/kubernetes/addons/dashboard-dp.yaml
I0104 06:24:06.474589   60942 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/dashboard-dp.yaml (4288 bytes)
I0104 06:24:06.532970   60942 addons.go:431] installing /etc/kubernetes/addons/dashboard-role.yaml
I0104 06:24:06.532986   60942 ssh_runner.go:362] scp dashboard/dashboard-role.yaml --> /etc/kubernetes/addons/dashboard-role.yaml (1724 bytes)
W0104 06:24:06.535457   60942 addons.go:457] apply failed, will retry: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply -f /etc/kubernetes/addons/ingress-deploy.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/ingress-deploy.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
I0104 06:24:06.535477   60942 retry.go:31] will retry after 168.162579ms: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply -f /etc/kubernetes/addons/ingress-deploy.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/ingress-deploy.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
W0104 06:24:06.535616   60942 addons.go:457] apply failed, will retry: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/storage-provisioner.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
I0104 06:24:06.535622   60942 retry.go:31] will retry after 134.999762ms: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/storage-provisioner.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
W0104 06:24:06.572744   60942 addons.go:457] apply failed, will retry: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/storageclass.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
I0104 06:24:06.572765   60942 retry.go:31] will retry after 178.822252ms: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/storageclass.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
I0104 06:24:06.590381   60942 addons.go:431] installing /etc/kubernetes/addons/dashboard-rolebinding.yaml
I0104 06:24:06.590398   60942 ssh_runner.go:362] scp dashboard/dashboard-rolebinding.yaml --> /etc/kubernetes/addons/dashboard-rolebinding.yaml (1046 bytes)
I0104 06:24:06.621821   60942 addons.go:431] installing /etc/kubernetes/addons/dashboard-sa.yaml
I0104 06:24:06.621855   60942 ssh_runner.go:362] scp dashboard/dashboard-sa.yaml --> /etc/kubernetes/addons/dashboard-sa.yaml (837 bytes)
I0104 06:24:06.671422   60942 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply --force -f /etc/kubernetes/addons/storage-provisioner.yaml
I0104 06:24:06.682550   60942 addons.go:431] installing /etc/kubernetes/addons/dashboard-secret.yaml
I0104 06:24:06.682572   60942 ssh_runner.go:362] scp dashboard/dashboard-secret.yaml --> /etc/kubernetes/addons/dashboard-secret.yaml (1389 bytes)
I0104 06:24:06.703945   60942 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply --force -f /etc/kubernetes/addons/ingress-deploy.yaml
I0104 06:24:06.724682   60942 addons.go:431] installing /etc/kubernetes/addons/dashboard-svc.yaml
I0104 06:24:06.724696   60942 ssh_runner.go:362] scp dashboard/dashboard-svc.yaml --> /etc/kubernetes/addons/dashboard-svc.yaml (1294 bytes)
I0104 06:24:06.752434   60942 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply --force -f /etc/kubernetes/addons/storageclass.yaml
I0104 06:24:06.802969   60942 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply -f /etc/kubernetes/addons/dashboard-ns.yaml -f /etc/kubernetes/addons/dashboard-clusterrole.yaml -f /etc/kubernetes/addons/dashboard-clusterrolebinding.yaml -f /etc/kubernetes/addons/dashboard-configmap.yaml -f /etc/kubernetes/addons/dashboard-dp.yaml -f /etc/kubernetes/addons/dashboard-role.yaml -f /etc/kubernetes/addons/dashboard-rolebinding.yaml -f /etc/kubernetes/addons/dashboard-sa.yaml -f /etc/kubernetes/addons/dashboard-secret.yaml -f /etc/kubernetes/addons/dashboard-svc.yaml
W0104 06:24:06.846101   60942 addons.go:457] apply failed, will retry: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply --force -f /etc/kubernetes/addons/ingress-deploy.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/ingress-deploy.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
I0104 06:24:06.846124   60942 retry.go:31] will retry after 349.314938ms: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply --force -f /etc/kubernetes/addons/ingress-deploy.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/ingress-deploy.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
W0104 06:24:06.846487   60942 addons.go:457] apply failed, will retry: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply --force -f /etc/kubernetes/addons/storage-provisioner.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/storage-provisioner.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
I0104 06:24:06.846521   60942 retry.go:31] will retry after 232.04492ms: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply --force -f /etc/kubernetes/addons/storage-provisioner.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/storage-provisioner.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
I0104 06:24:06.847742   60942 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0104 06:24:06.903949   60942 addons.go:457] apply failed, will retry: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply --force -f /etc/kubernetes/addons/storageclass.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/storageclass.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
I0104 06:24:06.903975   60942 retry.go:31] will retry after 349.882708ms: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply --force -f /etc/kubernetes/addons/storageclass.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/storageclass.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
W0104 06:24:06.947301   60942 addons.go:457] apply failed, will retry: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply -f /etc/kubernetes/addons/dashboard-ns.yaml -f /etc/kubernetes/addons/dashboard-clusterrole.yaml -f /etc/kubernetes/addons/dashboard-clusterrolebinding.yaml -f /etc/kubernetes/addons/dashboard-configmap.yaml -f /etc/kubernetes/addons/dashboard-dp.yaml -f /etc/kubernetes/addons/dashboard-role.yaml -f /etc/kubernetes/addons/dashboard-rolebinding.yaml -f /etc/kubernetes/addons/dashboard-sa.yaml -f /etc/kubernetes/addons/dashboard-secret.yaml -f /etc/kubernetes/addons/dashboard-svc.yaml: Process exited with status 1
stdout:

stderr:
error validating "/etc/kubernetes/addons/dashboard-ns.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
error validating "/etc/kubernetes/addons/dashboard-clusterrole.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
error validating "/etc/kubernetes/addons/dashboard-clusterrolebinding.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
error validating "/etc/kubernetes/addons/dashboard-configmap.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
error validating "/etc/kubernetes/addons/dashboard-dp.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
error validating "/etc/kubernetes/addons/dashboard-role.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
error validating "/etc/kubernetes/addons/dashboard-rolebinding.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
error validating "/etc/kubernetes/addons/dashboard-sa.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
error validating "/etc/kubernetes/addons/dashboard-secret.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
error validating "/etc/kubernetes/addons/dashboard-svc.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
I0104 06:24:06.947327   60942 retry.go:31] will retry after 327.578588ms: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply -f /etc/kubernetes/addons/dashboard-ns.yaml -f /etc/kubernetes/addons/dashboard-clusterrole.yaml -f /etc/kubernetes/addons/dashboard-clusterrolebinding.yaml -f /etc/kubernetes/addons/dashboard-configmap.yaml -f /etc/kubernetes/addons/dashboard-dp.yaml -f /etc/kubernetes/addons/dashboard-role.yaml -f /etc/kubernetes/addons/dashboard-rolebinding.yaml -f /etc/kubernetes/addons/dashboard-sa.yaml -f /etc/kubernetes/addons/dashboard-secret.yaml -f /etc/kubernetes/addons/dashboard-svc.yaml: Process exited with status 1
stdout:

stderr:
error validating "/etc/kubernetes/addons/dashboard-ns.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
error validating "/etc/kubernetes/addons/dashboard-clusterrole.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
error validating "/etc/kubernetes/addons/dashboard-clusterrolebinding.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
error validating "/etc/kubernetes/addons/dashboard-configmap.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
error validating "/etc/kubernetes/addons/dashboard-dp.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
error validating "/etc/kubernetes/addons/dashboard-role.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
error validating "/etc/kubernetes/addons/dashboard-rolebinding.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
error validating "/etc/kubernetes/addons/dashboard-sa.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
error validating "/etc/kubernetes/addons/dashboard-secret.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
error validating "/etc/kubernetes/addons/dashboard-svc.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
I0104 06:24:07.079885   60942 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply --force -f /etc/kubernetes/addons/storage-provisioner.yaml
I0104 06:24:07.196236   60942 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply --force -f /etc/kubernetes/addons/ingress-deploy.yaml
I0104 06:24:07.254570   60942 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply --force -f /etc/kubernetes/addons/storageclass.yaml
I0104 06:24:07.275957   60942 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply --force -f /etc/kubernetes/addons/dashboard-ns.yaml -f /etc/kubernetes/addons/dashboard-clusterrole.yaml -f /etc/kubernetes/addons/dashboard-clusterrolebinding.yaml -f /etc/kubernetes/addons/dashboard-configmap.yaml -f /etc/kubernetes/addons/dashboard-dp.yaml -f /etc/kubernetes/addons/dashboard-role.yaml -f /etc/kubernetes/addons/dashboard-rolebinding.yaml -f /etc/kubernetes/addons/dashboard-sa.yaml -f /etc/kubernetes/addons/dashboard-secret.yaml -f /etc/kubernetes/addons/dashboard-svc.yaml
W0104 06:24:07.280377   60942 addons.go:457] apply failed, will retry: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply --force -f /etc/kubernetes/addons/storage-provisioner.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/storage-provisioner.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
I0104 06:24:07.280401   60942 retry.go:31] will retry after 480.534226ms: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply --force -f /etc/kubernetes/addons/storage-provisioner.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/storage-provisioner.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
W0104 06:24:07.312206   60942 addons.go:457] apply failed, will retry: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply --force -f /etc/kubernetes/addons/ingress-deploy.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/ingress-deploy.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
I0104 06:24:07.312260   60942 retry.go:31] will retry after 731.68041ms: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply --force -f /etc/kubernetes/addons/ingress-deploy.yaml: Process exited with status 1
stdout:

stderr:
error: error validating "/etc/kubernetes/addons/ingress-deploy.yaml": error validating data: failed to download openapi: Get "https://localhost:8443/openapi/v2?timeout=32s": dial tcp [::1]:8443: connect: connection refused; if you choose to ignore these errors, turn validation off with --validate=false
I0104 06:24:07.348339   60942 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0104 06:24:07.763631   60942 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply --force -f /etc/kubernetes/addons/storage-provisioner.yaml
I0104 06:24:08.044747   60942 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply --force -f /etc/kubernetes/addons/ingress-deploy.yaml
I0104 06:24:09.828636   60942 ssh_runner.go:235] Completed: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply --force -f /etc/kubernetes/addons/storageclass.yaml: (2.574037719s)
I0104 06:24:12.285353   60942 ssh_runner.go:235] Completed: sudo pgrep -xnf kube-apiserver.*minikube.*: (4.936983084s)
I0104 06:24:12.285386   60942 api_server.go:72] duration metric: took 6.17445777s to wait for apiserver process to appear ...
I0104 06:24:12.285391   60942 api_server.go:88] waiting for apiserver healthz status ...
I0104 06:24:12.285408   60942 api_server.go:253] Checking apiserver healthz at https://192.168.49.2:8443/healthz ...
I0104 06:24:12.285777   60942 ssh_runner.go:235] Completed: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply --force -f /etc/kubernetes/addons/storage-provisioner.yaml: (4.522127812s)
I0104 06:24:12.285913   60942 ssh_runner.go:235] Completed: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply --force -f /etc/kubernetes/addons/dashboard-ns.yaml -f /etc/kubernetes/addons/dashboard-clusterrole.yaml -f /etc/kubernetes/addons/dashboard-clusterrolebinding.yaml -f /etc/kubernetes/addons/dashboard-configmap.yaml -f /etc/kubernetes/addons/dashboard-dp.yaml -f /etc/kubernetes/addons/dashboard-role.yaml -f /etc/kubernetes/addons/dashboard-rolebinding.yaml -f /etc/kubernetes/addons/dashboard-sa.yaml -f /etc/kubernetes/addons/dashboard-secret.yaml -f /etc/kubernetes/addons/dashboard-svc.yaml: (5.009924714s)
I0104 06:24:12.291794   60942 out.go:177] * Some dashboard features require the metrics-server addon. To enable all features please run:

	minikube addons enable metrics-server

I0104 06:24:12.307815   60942 api_server.go:279] https://192.168.49.2:8443/healthz returned 200:
ok
I0104 06:24:12.311201   60942 api_server.go:141] control plane version: v1.31.0
I0104 06:24:12.311214   60942 api_server.go:131] duration metric: took 25.817817ms to wait for apiserver health ...
I0104 06:24:12.311236   60942 system_pods.go:43] waiting for kube-system pods to appear ...
I0104 06:24:12.321421   60942 system_pods.go:59] 7 kube-system pods found
I0104 06:24:12.321440   60942 system_pods.go:61] "coredns-6f6b679f8f-9lwqg" [96b2a26b-1d97-47a5-950c-07dd6f177ba7] Running / Ready:ContainersNotReady (containers with unready status: [coredns]) / ContainersReady:ContainersNotReady (containers with unready status: [coredns])
I0104 06:24:12.321455   60942 system_pods.go:61] "etcd-minikube" [84e3ec10-52db-411a-aaf2-0f69967c5c3c] Running / Ready:ContainersNotReady (containers with unready status: [etcd]) / ContainersReady:ContainersNotReady (containers with unready status: [etcd])
I0104 06:24:12.321462   60942 system_pods.go:61] "kube-apiserver-minikube" [d3941a53-25ac-49d3-b9c5-a5350b2845be] Running / Ready:ContainersNotReady (containers with unready status: [kube-apiserver]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-apiserver])
I0104 06:24:12.321469   60942 system_pods.go:61] "kube-controller-manager-minikube" [df458c79-33f2-40d7-a40f-28971a1265e4] Running / Ready:ContainersNotReady (containers with unready status: [kube-controller-manager]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-controller-manager])
I0104 06:24:12.321541   60942 system_pods.go:61] "kube-proxy-2zlzk" [4e51de3d-b459-44a9-b46c-e174b19294d5] Running / Ready:ContainersNotReady (containers with unready status: [kube-proxy]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-proxy])
I0104 06:24:12.321547   60942 system_pods.go:61] "kube-scheduler-minikube" [ddb50610-1e95-4166-9541-7726c9204c54] Running / Ready:ContainersNotReady (containers with unready status: [kube-scheduler]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-scheduler])
I0104 06:24:12.321553   60942 system_pods.go:61] "storage-provisioner" [d4302a75-aeb4-4909-b5a0-f2fb10d3a148] Running / Ready:ContainersNotReady (containers with unready status: [storage-provisioner]) / ContainersReady:ContainersNotReady (containers with unready status: [storage-provisioner])
I0104 06:24:12.321558   60942 system_pods.go:74] duration metric: took 10.317047ms to wait for pod list to return data ...
I0104 06:24:12.321568   60942 kubeadm.go:582] duration metric: took 6.210639934s to wait for: map[apiserver:true system_pods:true]
I0104 06:24:12.321580   60942 node_conditions.go:102] verifying NodePressure condition ...
I0104 06:24:12.327272   60942 node_conditions.go:122] node storage ephemeral capacity is 29379712Ki
I0104 06:24:12.327287   60942 node_conditions.go:123] node cpu capacity is 4
I0104 06:24:12.327296   60942 node_conditions.go:105] duration metric: took 5.712625ms to run NodePressure ...
I0104 06:24:12.327308   60942 start.go:241] waiting for startup goroutines ...
I0104 06:24:13.027325   60942 ssh_runner.go:235] Completed: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.31.0/kubectl apply --force -f /etc/kubernetes/addons/ingress-deploy.yaml: (4.98254789s)
I0104 06:24:13.027367   60942 addons.go:475] Verifying addon ingress=true in "minikube"
I0104 06:24:13.033302   60942 out.go:177] * Verifying ingress addon...
I0104 06:24:13.040583   60942 kapi.go:75] Waiting for pod with label "app.kubernetes.io/name=ingress-nginx" in ns "ingress-nginx" ...
I0104 06:24:13.056392   60942 kapi.go:86] Found 3 Pods for label selector app.kubernetes.io/name=ingress-nginx
I0104 06:24:13.056408   60942 kapi.go:107] duration metric: took 15.829172ms to wait for app.kubernetes.io/name=ingress-nginx ...
I0104 06:24:13.063895   60942 out.go:177] * Enabled addons: default-storageclass, storage-provisioner, dashboard, ingress
I0104 06:24:13.067679   60942 addons.go:510] duration metric: took 6.9564898s for enable addons: enabled=[default-storageclass storage-provisioner dashboard ingress]
I0104 06:24:13.067713   60942 start.go:246] waiting for cluster config update ...
I0104 06:24:13.067740   60942 start.go:255] writing updated cluster config ...
I0104 06:24:13.067968   60942 ssh_runner.go:195] Run: rm -f paused
I0104 06:24:13.155307   60942 start.go:600] kubectl: 1.32.0, cluster: 1.31.0 (minor skew: 1)
I0104 06:24:13.164592   60942 out.go:177] * Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default
